
library Main {

  void Main() {
	boolean t = true;
	boolean f = false;
	boolean a;
	boolean b;
	
	// Entre literales
	/*
	a = true && true;
	a = true && false;
	a = false && true;
	a = false && false;
	
	a = true || true;
	a = true || false;
	a = false || true;
	a = false || false;	
	*/
	// Entre literales y variables instanciadas
	/*
	a = true && t;
	a = true && f;
	a = false && t;
	a = false && f;
	
	a = t && true;
	a = t && false;
	a = f && true;
	a = f && false;
	
	a = true || t;
	a = true || f;
	a = false || t;
	a = false || f;	
	
	a = t || true;
	a = t || false;
	a = f || true;
	a = f || false;	
	*/
	// Entre literales y variables sin instanciar
	/*
	a = true && b;
	a = false && b;
	
	a = b && true;
	a = b && false;
	
	a = true || b;
	a = false || b;
	
	a = b || true;
	a = b || false;
	*/
	// Entre variables instanciadas
	/*
	a = t && t;
	a = t && f;
	a = f && t;
	a = f && f;
	
	a = t || t;
	a = t || f;
	a = f || t;
	a = f || f;	
	*/
	// Entre variables instanciadas y variables sin instanciar
	/*
	a = t && b;
	a = f && b;
	
	a = b && t;
	a = b && f;
	
	a = t || b;
	a = f || b;
	
	a = b || t;
	a = b || f;
	*/
	// Entre variables sin instanciar
	
	a = b&&b;
	a = b||b; 
	
	//Llamadas a funciones
	/*
	a = and(t,t);
	a = or(t,f);
	*/
  }
  
  boolean and(boolean a, boolean b) {
	return a&&b;
  }
  
  boolean or(boolean a, boolean b) {
	return a||b;
  }
  
}
